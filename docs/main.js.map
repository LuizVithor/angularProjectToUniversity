{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/dashboard/dashboard.component.ts","./src/app/component/dashboard/dashboard.component.html","./src/app/model/task.ts","./src/app/service/crud.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TodoList';\n  show = true;\n}\n","<app-dashboard *ngIf=\"show\"></app-dashboard>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = '';\n  editTaskValue : string = '';\n\n  constructor(private crudService : CrudService) { }\n\n  ngOnInit(): void {\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask() {\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask : Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to delete task\");\n    });\n  }\n\n  call(etask : Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n\n\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n\n        <div class=\"row mt-4\" style=\"height: 500px;\">\n            <div class=\"col\"></div>\n            <div class=\"col-md-6 bg-white shadow\">\n\n                <div class=\"card bg-warning mt-4\">\n                    <h4 class=\"text-white p-3 pt-2 pb-2\">To Do App</h4>\n                </div>\n\n                <div class=\"shadow\">\n                    <div class=\"input-group p-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter task \" name=\"task\" [(ngModel)]=\"addTaskValue\">\n                        <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"addTask()\">+</button>\n                      </div>\n                </div>\n\n                <h4 class=\"text-primary mt-4\">Tasks : </h4>\n\n                <div style=\"overflow-y: auto; height: 350px;\">\n                    <div class=\"m-3\" *ngFor=\"let task of taskArr\">\n                        <div class=\"p-2 shadow border\" id=\"tasks\" >\n                            <div class=\"input-group row ps-3\" >\n                                <div class=\"card col-md-10 border-0\"> {{task.task_name}} </div>\n                                <button class=\"btn btn-outline-primary col me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#exampleModal\" (click)=\"call(task)\" >e</button>\n                                <div class=\"btn btn-outline-danger col\" (click)=\"deleteTask(task)\" >X</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"input-group p-4\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Enter task \" name=\"task\" [(ngModel)]=\"editTaskValue\">\n                                <button class=\"btn btn-outline-success\" type=\"button\" data-bs-dismiss=\"modal\" (click)=\"editTask()\">Update</button>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col\"></div>\n\n        </div>\n\n    </div>\n</div>","export class Task {\n    id : number = 0;\n    task_name : string = '';\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from '../model/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  serviceURL : string ;\n\n  constructor(private http : HttpClient) {\n    this.serviceURL = \"http://localhost:3000/tasks\"\n  }\n\n  addTask(task : Task) : Observable<Task> {\n    return this.http.post<Task>(this.serviceURL,task);\n  }\n\n  getAllTask() : Observable<Task[]> {\n    return this.http.get<Task[]>(this.serviceURL);\n  }\n\n  deleteTask(task : Task) : Observable<Task> {\n    return this.http.delete<Task>(this.serviceURL+'/'+task.id);\n  }\n\n  editTask(task : Task) : Observable<Task> {\n    return this.http.put<Task>(this.serviceURL+'/'+task.id,task);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}